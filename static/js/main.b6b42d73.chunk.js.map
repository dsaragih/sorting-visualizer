{"version":3,"sources":["algorithms/sortingAlgorithms.js","App.js","reportWebVitals.js","index.js"],"names":["bubbleSort","selectionSort","insertionSort","mergeSort","partition","quickSort","array","i","length","j","min","start","end","mid","Math","floor","left","slice","right","k","pivot","pivotIndex","p","algorithms","draw","ctx","color","clearRect","canvas","width","height","fillStyle","forEach","el","fillRect","Controls","props","handleChange","Form","Select","style","className","defaultValue","size","onChange","e","value","Canvas","displays","idx","canvasRef","sorting","state","useRef","useEffect","current","animationFrameId","context","getContext","sort","setInterval","next","render","window","requestAnimationFrame","cancelAnimationFrame","useCanvas","label","Number","Button","variant","id","onClick","ref","App","Array","keys","map","x","random","createArray","dict","c","arr","handleClick","useState","setDisplays","clone","event","target","handleMasterClick","handleReset","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6b42d73.chunk.js","sourcesContent":["export function* bubbleSort (array) {\n    for (let i = 0; i < array.length - 1; i++) {\n        for (let j = 0; j < array.length - i - 1; j++) {\n\t    if (array[j] > array[j + 1]) {\n\t    [array[j], array[j + 1]] = [array[j + 1], array[j]];\n\t    }\n            yield j;\n        }\n    }  \n};\n\nexport function* selectionSort (array) {\n    for (let i = 0; i < array.length; i++) {\n        let min = i;\n        for (let j = i; j < array.length; j++) {\n            if (array[j] < array[min]) min = j;\n            yield j;\n        }\n        [array[i], array[min]] = [array[min], array[i]];\n    }\n}\n\nexport function* insertionSort (array) {\n    for (let i = 1; i < array.length; i++) {\n        if (array[i] < array[i - 1]) {\n            for (let j = i; j >= 0; j--) {\n                if (array[j] < array[j - 1]) {\n                    [array[j - 1], array[j]] = [array[j], array[j - 1]];\n                }\n                yield j;\n            }\n        }\n    }\n}\n\n\nexport function* mergeSort (array, start=0, end=200) {\n    if (end - start > 1) {\n        const mid = Math.floor((end + start) / 2);\n        yield * mergeSort(array,  mid, end);\n        yield * mergeSort(array,  start, mid);\n\n        const left = array.slice(start, mid);\n        const right = array.slice(mid, end);\n\n        let i = 0, j = 0, k = start;\n        while (i < left.length && j < right.length) {\n            if (left[i] < right[j]) {\n                array[k] = left[i];\n                i++;\n                yield i;\n            } else {\n                array[k] = right[j];\n                j++;\n                yield j;\n            }\n            k++;\n            yield k;\n        }\n\n        while (i < left.length) {\n            array[k] = left[i];\n            i++;\n            k++;\n            yield i;\n            yield k;\n        }\n        \n        while (j < right.length) {\n\t    array[k] = right[j];\n\t    j++;\n            k++;\n            yield j;\n            yield k;\n        }\n    } \n}\n\nfunction* partition (array, start, end) {\n    let pivotIndex = start;\n    let pivot = array[pivotIndex];\n  \n    while (start < end) {\n        while (start < array.length && array[start] <= pivot) {\n            start++;\n            yield start;\n        }\n        while (array[end] > pivot) {\n            end--;\n            yield end;\n        }\n        if (start < end) {\n            [array[start], array[end]] = [array[end], array[start]];\n        }\n        \n    }\n\n    [array[end], array[pivotIndex]] = [array[pivotIndex], array[end]];\n    return end;\n  }\n  \nexport function* quickSort (array, start=0, end=199) {\n    if (start < end) {\n        let p = yield * partition(array, start, end);\n        yield * quickSort(array, start, p - 1);\n        yield * quickSort(array, p + 1, end);\n    }\n}\n","import React, { useState, useRef, useEffect } from 'react';\nimport { bubbleSort, selectionSort, insertionSort, mergeSort, quickSort } from './algorithms/sortingAlgorithms';\nimport './App.css';\nimport { Form, Button } from 'react-bootstrap';\n\nconst algorithms = {\n  'Bubble Sort': bubbleSort,\n  'Selection Sort': selectionSort,\n  'Insertion Sort': insertionSort,\n  'Merge Sort': mergeSort,\n  'Quick Sort': quickSort\n}\n\nfunction createArray () {\n  // Produces an array with elements 1...200\n  let array = [...Array(200).keys()].map(x => x + 1);\n\n  // Durstenfeld shuffle\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n\n  return array;\n};\n\nconst draw = (ctx, array, color) => {\n  ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n  \n  ctx.fillStyle = color;\n  array.forEach((el, i) => ctx.fillRect(ctx.canvas.width * i / 200, ctx.canvas.height * (200 - el) / 200, ctx.canvas.width / 200, ctx.canvas.height));\n  \n};\n\nfunction Controls (props) {\n  const {handleChange, i} = props;\n  // Dropdown menu\n  return (\n    <Form.Select style={{width: '30%'}}className=\"dropdown\" defaultValue=\"Bubble Sort\" size=\"sm\" onChange={e => handleChange(e, i)}>\n      <option>Bubble Sort</option>\n      <option value=\"Insertion Sort\">Insertion Sort</option>\n      <option value=\"Selection Sort\">Selection Sort</option>\n      <option value=\"Merge Sort\">Merge Sort</option>\n      <option value=\"Quick Sort\">Quick Sort</option>\n    </Form.Select>\n  )\n}\n\n// Canvas code is based off of https://medium.com/@pdx.lucasm/canvas-with-react-js-32e133c05258\n\nfunction Canvas (props) {\n  const { displays, idx } = props\n\n  const canvasRef = useCanvas(displays['sorting'], displays['arr'], displays['start']);\n  const label = Number(idx) + 1;\n\n  return (\n    <div className=\"display\">\n      <div className=\"header\">\n        <span className=\"title\">{`Display ${label}`}</span>\n        <Controls handleChange={(e, i) => displays['handleChange'](e, i)} i={idx}/>\n        <Button variant=\"success\" id={`toggle${(label)}`} onClick={() => displays['handleClick'](idx)} size=\"sm\">Start</Button>\n      </div>\n      <canvas ref={canvasRef}></canvas>\n    </div>\n  )\n}\n\nfunction useCanvas (sorting, array, state) {\n  \n  // useRef in order to retrieve the current version of canvas\n  const canvasRef = useRef(null);\n  \n  useEffect(() => {\n    \n    const canvas = canvasRef.current;\n\n    // Causes canvas to fill entire div (accounting for padding, etc.)\n    canvas.style.width = '100%';\n    canvas.style.height = '100%';\n    const context = canvas.getContext('2d');\n        \n    draw(context, array, '#fff');\n    let animationFrameId;\n    \n    if (state) {\n      let sort = algorithms[sorting](array);\n\n      // The animations for the O(n ** 2) algorithms were really slow\n      // not necessarily because of the time complexity but because it traverses\n      // a lot of elements at once, thus \"yield\" will be invoked more often\n\n      if (sorting == 'Bubble Sort' || sorting == 'Insertion Sort' || sorting == 'Selection Sort') {\n        setInterval(() => {\n          sort.next()\n        }, 0)\n      } else if (sorting == 'Merge Sort'){\n        setInterval(() => {\n          sort.next()\n        }, 18)\n      } else {\n        setInterval(() => {\n          sort.next()\n        }, 25)\n      }\n      const render = () => {\n        animationFrameId = window.requestAnimationFrame(render);\n        draw(context, array, '#FF7F7F');\n      }\n      render();\n    } \n    return () => {\n      // dismounts the animation when the component dismounts\n      window.cancelAnimationFrame(animationFrameId);\n    }\n    \n  }, [state])\n  \n  \n  return canvasRef;\n}\n\nfunction App () {\n\n  const array = createArray();\n  \n  // The dict looks a lot like a state that would be found in a React class component\n  // It would also be possible to split the dict into 4 objects, each having their\n  // respective useStates\n\n  const dict = {};\n  for (let c = 0; c < 4; c++) {\n    dict[c] = {\n      arr: array.slice(), \n      start: false, \n      sorting: 'Bubble Sort', \n      handleClick: i => handleClick(i),\n      handleChange: (e, i) => handleChange(e, i)\n    };\n  };\n\n  const [displays, setDisplays] = useState(dict);\n    \n  const handleClick = i => {\n    // Handles the individual buttons\n    let clone = {...displays};\n    clone[i]['start'] = true;\n    setDisplays(clone);\n  }\n\n  const handleMasterClick = () => {\n    // Handles the central button\n    let clone = {...displays};\n    for (let i = 0; i < 4; i++) {\n      clone[i]['start'] = true;\n    }\n    setDisplays(clone);\n  }\n\n  const handleChange = (event, i) => {\n    // Handles the dropdown menu\n    let clone = {...displays};\n    clone[i]['sorting'] = event.target.value;\n    setDisplays(clone);\n  }\n  \n  const handleReset = () => {\n    // Handles the reset button\n    let clone = {...displays};\n    for (let i = 0; i < 4; i++) {\n      clone[i]['start'] = false;\n      clone[i]['arr'] = array.slice();\n    }\n    setDisplays(clone);\n  }\n\n  return (\n    <div id=\"container\">\n      <Canvas displays={displays[0]} idx='0'/>\n      <Canvas displays={displays[1]} idx='1'/>\n      <Canvas displays={displays[2]} idx='2'/>\n      <Canvas displays={displays[3]} idx='3'/>\n      <Button id=\"master\" size=\"lg\" variant=\"danger\" onClick={() => handleMasterClick()}>Start All</Button>\n      <Button id=\"reset\" size=\"lg\" variant=\"info\" onClick={() => handleReset()}>Reset All</Button>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}